---

- name: Install Nginx dependencies
  yum:
    name:
      - "@Development Tools"
      - GeoIP-data
      - GeoIP-devel
      - openssl-devel
    state: latest

- name: Create web root
  file:
    dest: "{{ app_root }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0755
    state: directory

- name: Register Nginx extra options
  set_fact:
    nginx_extra_options: []

- name: Get Nginx source code
  get_url:
    url: "https://nginx.org/download/nginx-{{ nginx_version }}.tar.gz"
    dest: "/tmp/nginx-{{ nginx_version }}.tar.gz"
  register: nginx_source

- name: Unarchive Nginx source code
  unarchive:
    src: "{{ nginx_source.dest }}"
    dest: /tmp
    remote_src: true
  when: nginx_source.changed
  register: nginx_source_code

- name: Setup Extra Modules
  include_role:
    name: "{{ module_name }}"
    public: true
  loop: "{{ nginx_extra_modules }}"
  loop_control:
    loop_var: module_name

- name: Configure Nginx
  command: "./configure --prefix=/opt/nginx {{ nginx_modules | join(' ') }} {{ nginx_extra_options | join(' ') }}"
  args:
    chdir: "/tmp/nginx-{{ nginx_version }}"
  when: nginx_source_code.changed
  register: nginx_configured

- name: Install Nginx
  shell: "make --jobs {{ ansible_processor_vcpus }} && make install"
  args:
    chdir: "/tmp/nginx-{{ nginx_version }}"
  when: nginx_configured.changed

- name: Clear Nginx source code
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/nginx-{{ nginx_version }}.tar.gz"
    - "/tmp/nginx-{{ nginx_version }}"
  when: clear is defined and clear|bool

- name: Install Nginx service
  template:
    src: nginx.service.j2
    dest: "/lib/systemd/system/nginx.service"
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Enable nginx
  systemd:
    name: nginx
    state: started
    enabled: yes
